package garethflowers.retagit;

import java.awt.Component;
import java.awt.Cursor;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import javax.swing.JFileChooser;

/**
 * @author Gareth Flowers
 */
public final class MainGUI extends javax.swing.JFrame {

    private Tag Current;
    private static final long serialVersionUID = 1l;

    /** Creates new form MainGUI */
    public MainGUI() {
        initComponents();
        
        this.Updating(false);
        this.LoadCombos();
        this.LockGUI(true);
        this.jMenuFile.setEnabled(true);
        this.jMenuHelp.setEnabled(true);

        this.setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jLabel1 = new javax.swing.JLabel();
        jButtonOK = new javax.swing.JButton();
        jLabelFile = new javax.swing.JLabel();
        jTabPanelMain = new javax.swing.JTabbedPane();
        jPanelInfo = new javax.swing.JPanel();
        jTextName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextArtist = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextAlbumArtist = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextAlbum = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextTrack = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextTrackTotal = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextReleaseDate = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextDiscTotal = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextDisc = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextGrouping = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextComposer = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextBPM = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jComboGenre = new javax.swing.JComboBox();
        jPanelVideo = new javax.swing.JPanel();
        jComboRating = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        jTextSeries = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jTextProgramme = new javax.swing.JTextField();
        jTextEpisodeID = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jTextEpisodeNumber = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jComboHD = new javax.swing.JComboBox();
        jLabel29 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaDescription = new javax.swing.JTextArea();
        jPaneliTunes = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jTextCnID = new javax.swing.JTextField();
        jPanelAdditional = new javax.swing.JPanel();
        jTextEncodedBy = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jComboMediaType = new javax.swing.JComboBox();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jTextCopyright = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboAdvisory = new javax.swing.JComboBox();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jComboCompilation = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaComments = new javax.swing.JTextArea();
        jComboPodcast = new javax.swing.JComboBox();
        jLabel30 = new javax.swing.JLabel();
        jButtonCancel = new javax.swing.JButton();
        jLabelUpdating = new javax.swing.JLabel();
        jProgressBarUpdating = new javax.swing.JProgressBar();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemFileOpen = new javax.swing.JMenuItem();
        jMenuItemFileClose = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItemFileExit = new javax.swing.JMenuItem();
        jMenuHelp = new javax.swing.JMenu();
        jMenuItemHelpAbout = new javax.swing.JMenuItem();

        jMenu1.setText("File");
        jMenuBar2.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar2.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ReTagIt");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocationByPlatform(true);
        setName("RecodeIt!"); // NOI18N
        setResizable(false);

        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel1.setLabelFor(jLabelFile);
        jLabel1.setText("Filename");
        jLabel1.setDoubleBuffered(true);

        jButtonOK.setFont(jButtonOK.getFont());
        jButtonOK.setMnemonic('U');
        jButtonOK.setText("Update");
        jButtonOK.setDoubleBuffered(true);
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        jLabelFile.setFont(jLabelFile.getFont());
        jLabelFile.setText("none");
        jLabelFile.setToolTipText("");
        jLabelFile.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabelFile.setDoubleBuffered(true);
        jLabelFile.setEnabled(false);

        jTabPanelMain.setDoubleBuffered(true);
        jTabPanelMain.setFont(jTabPanelMain.getFont());

        jPanelInfo.setFont(jPanelInfo.getFont());

        jTextName.setFont(jTextName.getFont());
        jTextName.setDoubleBuffered(true);

        jLabel6.setFont(jLabel6.getFont().deriveFont(jLabel6.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel6.setLabelFor(jTextName);
        jLabel6.setText("Name");
        jLabel6.setDoubleBuffered(true);

        jTextArtist.setFont(jTextArtist.getFont());
        jTextArtist.setDoubleBuffered(true);

        jLabel7.setFont(jLabel7.getFont().deriveFont(jLabel7.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel7.setLabelFor(jTextArtist);
        jLabel7.setText("Artist");
        jLabel7.setDoubleBuffered(true);

        jTextAlbumArtist.setFont(jTextAlbumArtist.getFont());
        jTextAlbumArtist.setDoubleBuffered(true);

        jLabel9.setFont(jLabel9.getFont().deriveFont(jLabel9.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel9.setLabelFor(jTextAlbumArtist);
        jLabel9.setText("Album Artist");
        jLabel9.setDoubleBuffered(true);

        jTextAlbum.setFont(jTextAlbum.getFont());
        jTextAlbum.setDoubleBuffered(true);

        jLabel10.setFont(jLabel10.getFont().deriveFont(jLabel10.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel10.setLabelFor(jTextAlbum);
        jLabel10.setText("Album");
        jLabel10.setDoubleBuffered(true);

        jTextTrack.setFont(jTextTrack.getFont());
        jTextTrack.setDoubleBuffered(true);
        jTextTrack.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextTrackKeyTyped(evt);
            }
        });

        jLabel11.setFont(jLabel11.getFont().deriveFont(jLabel11.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel11.setLabelFor(jTextTrackTotal);
        jLabel11.setText("of");
        jLabel11.setDoubleBuffered(true);

        jTextTrackTotal.setFont(jTextTrackTotal.getFont());
        jTextTrackTotal.setDoubleBuffered(true);
        jTextTrackTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextTrackTotalKeyTyped(evt);
            }
        });

        jLabel12.setFont(jLabel12.getFont().deriveFont(jLabel12.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel12.setLabelFor(jTextTrack);
        jLabel12.setText("Track");
        jLabel12.setDoubleBuffered(true);

        jTextReleaseDate.setFont(jTextReleaseDate.getFont());
        jTextReleaseDate.setDoubleBuffered(true);
        jTextReleaseDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextReleaseDateKeyTyped(evt);
            }
        });

        jLabel8.setFont(jLabel8.getFont().deriveFont(jLabel8.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel8.setLabelFor(jTextReleaseDate);
        jLabel8.setText("Year");
        jLabel8.setDoubleBuffered(true);

        jTextDiscTotal.setFont(jTextDiscTotal.getFont());
        jTextDiscTotal.setDoubleBuffered(true);
        jTextDiscTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextDiscTotalKeyTyped(evt);
            }
        });

        jLabel13.setFont(jLabel13.getFont().deriveFont(jLabel13.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel13.setLabelFor(jTextDiscTotal);
        jLabel13.setText("of");
        jLabel13.setDoubleBuffered(true);

        jTextDisc.setFont(jTextDisc.getFont());
        jTextDisc.setDoubleBuffered(true);
        jTextDisc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextDiscKeyTyped(evt);
            }
        });

        jLabel14.setFont(jLabel14.getFont().deriveFont(jLabel14.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel14.setLabelFor(jTextDisc);
        jLabel14.setText("Disc");
        jLabel14.setDoubleBuffered(true);

        jTextGrouping.setFont(jTextGrouping.getFont());
        jTextGrouping.setDoubleBuffered(true);

        jLabel15.setFont(jLabel15.getFont().deriveFont(jLabel15.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel15.setLabelFor(jTextGrouping);
        jLabel15.setText("Grouping");
        jLabel15.setDoubleBuffered(true);

        jTextComposer.setFont(jTextComposer.getFont());
        jTextComposer.setDoubleBuffered(true);
        jTextComposer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextComposerActionPerformed(evt);
            }
        });

        jLabel16.setFont(jLabel16.getFont().deriveFont(jLabel16.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel16.setLabelFor(jTextComposer);
        jLabel16.setText("Composer");
        jLabel16.setDoubleBuffered(true);

        jTextBPM.setFont(jTextBPM.getFont());
        jTextBPM.setDoubleBuffered(true);
        jTextBPM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextBPMKeyTyped(evt);
            }
        });

        jLabel17.setFont(jLabel17.getFont().deriveFont(jLabel17.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel17.setLabelFor(jTextBPM);
        jLabel17.setText("BPM");
        jLabel17.setDoubleBuffered(true);

        jLabel18.setFont(jLabel18.getFont().deriveFont(jLabel18.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel18.setLabelFor(jComboGenre);
        jLabel18.setText("Genre");
        jLabel18.setDoubleBuffered(true);

        jComboGenre.setEditable(true);
        jComboGenre.setFont(jComboGenre.getFont());
        jComboGenre.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Alternative", "AlternRock", "Blues", "Classic Rock", "Country", "Dance", "Disco", "Funk", "Grunge", "Hip-Hop", "Industrial", "Jazz", "Metal", "New Age", "Oldies", "Other", "Pop", "R&B", "Rap", "Reggae", "Rock", "Techno" }));
        jComboGenre.setDoubleBuffered(true);

        javax.swing.GroupLayout jPanelInfoLayout = new javax.swing.GroupLayout(jPanelInfo);
        jPanelInfo.setLayout(jPanelInfoLayout);
        jPanelInfoLayout.setHorizontalGroup(
            jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInfoLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel6))
            .addGroup(jPanelInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextName, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanelInfoLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInfoLayout.createSequentialGroup()
                        .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextAlbum, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                            .addComponent(jTextArtist, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                            .addComponent(jTextAlbumArtist, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanelInfoLayout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addGap(61, 61, 61))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelInfoLayout.createSequentialGroup()
                                        .addComponent(jTextTrack, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextTrackTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel12)))
                            .addComponent(jTextReleaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInfoLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 319, Short.MAX_VALUE)
                        .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelInfoLayout.createSequentialGroup()
                                .addComponent(jTextDisc, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextDiscTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel14))))
                .addContainerGap())
            .addGroup(jPanelInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextGrouping, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(jTextBPM, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanelInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextComposer, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jComboGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanelInfoLayout.setVerticalGroup(
            jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInfoLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelInfoLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextArtist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextAlbumArtist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelInfoLayout.createSequentialGroup()
                        .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelInfoLayout.createSequentialGroup()
                                .addComponent(jTextReleaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46))
                            .addGroup(jPanelInfoLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(32, 32, 32)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextTrack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11)
                                    .addComponent(jTextTrackTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextDisc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(jTextDiscTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelInfoLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextGrouping, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextBPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelInfoLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(26, 26, 26)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextComposer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelInfoLayout.createSequentialGroup()
                        .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(jLabel16))
                        .addGap(26, 26, 26)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabPanelMain.addTab("    Info    ", jPanelInfo);

        jPanelVideo.setFont(jPanelVideo.getFont());

        jComboRating.setFont(jComboRating.getFont());
        jComboRating.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "U", "PG", "12", "12A", "15", "18", "E" }));
        jComboRating.setDoubleBuffered(true);

        jLabel20.setFont(jLabel20.getFont().deriveFont(jLabel20.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel20.setLabelFor(jTextProgramme);
        jLabel20.setText("Programme");
        jLabel20.setDoubleBuffered(true);

        jTextSeries.setFont(jTextSeries.getFont());
        jTextSeries.setDoubleBuffered(true);
        jTextSeries.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextSeriesKeyTyped(evt);
            }
        });

        jLabel19.setFont(jLabel19.getFont().deriveFont(jLabel19.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel19.setLabelFor(jTextSeries);
        jLabel19.setText("Series Number");
        jLabel19.setDoubleBuffered(true);

        jTextProgramme.setFont(jTextProgramme.getFont());
        jTextProgramme.setDoubleBuffered(true);

        jTextEpisodeID.setFont(jTextEpisodeID.getFont());
        jTextEpisodeID.setDoubleBuffered(true);

        jLabel21.setFont(jLabel21.getFont().deriveFont(jLabel21.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel21.setLabelFor(jTextEpisodeID);
        jLabel21.setText("Episode ID");
        jLabel21.setDoubleBuffered(true);

        jLabel22.setFont(jLabel22.getFont().deriveFont(jLabel22.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel22.setLabelFor(jTextEpisodeNumber);
        jLabel22.setText("Episode Number");
        jLabel22.setDoubleBuffered(true);

        jTextEpisodeNumber.setFont(jTextEpisodeNumber.getFont());
        jTextEpisodeNumber.setDoubleBuffered(true);
        jTextEpisodeNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextEpisodeNumberKeyTyped(evt);
            }
        });

        jLabel23.setFont(jLabel23.getFont().deriveFont(jLabel23.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel23.setLabelFor(jComboRating);
        jLabel23.setText("Rating");
        jLabel23.setDoubleBuffered(true);

        jLabel24.setFont(jLabel24.getFont().deriveFont(jLabel24.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel24.setLabelFor(jComboHD);
        jLabel24.setText("HD");
        jLabel24.setDoubleBuffered(true);

        jComboHD.setFont(jComboHD.getFont());
        jComboHD.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Yes", "No" }));
        jComboHD.setSelectedIndex(1);
        jComboHD.setDoubleBuffered(true);

        jLabel29.setFont(jLabel29.getFont().deriveFont(jLabel29.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel29.setLabelFor(jTextAreaDescription);
        jLabel29.setText("Description");
        jLabel29.setDoubleBuffered(true);

        jTextAreaDescription.setColumns(20);
        jTextAreaDescription.setFont(new java.awt.Font("Tahoma", 0, 11));
        jTextAreaDescription.setLineWrap(true);
        jTextAreaDescription.setRows(5);
        jTextAreaDescription.setWrapStyleWord(true);
        jTextAreaDescription.setDoubleBuffered(true);
        jScrollPane2.setViewportView(jTextAreaDescription);

        javax.swing.GroupLayout jPanelVideoLayout = new javax.swing.GroupLayout(jPanelVideo);
        jPanelVideo.setLayout(jPanelVideoLayout);
        jPanelVideoLayout.setHorizontalGroup(
            jPanelVideoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelVideoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelVideoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelVideoLayout.createSequentialGroup()
                        .addGroup(jPanelVideoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                            .addComponent(jTextProgramme, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                            .addComponent(jTextEpisodeID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                            .addComponent(jComboRating, 0, 346, Short.MAX_VALUE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelVideoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextSeries, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextEpisodeNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(jComboHD, 0, 90, Short.MAX_VALUE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanelVideoLayout.setVerticalGroup(
            jPanelVideoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelVideoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelVideoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelVideoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel20)
                        .addComponent(jLabel19))
                    .addGroup(jPanelVideoLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanelVideoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextProgramme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextSeries, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelVideoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelVideoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextEpisodeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextEpisodeNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelVideoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelVideoLayout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelVideoLayout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabPanelMain.addTab("    Video    ", jPanelVideo);

        jLabel31.setFont(jLabel31.getFont().deriveFont(jLabel31.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel31.setLabelFor(jTextCnID);
        jLabel31.setText("CnID");
        jLabel31.setDoubleBuffered(true);

        jTextCnID.setFont(jTextCnID.getFont());
        jTextCnID.setDoubleBuffered(true);
        jTextCnID.setInheritsPopupMenu(true);
        jTextCnID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextCnIDKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPaneliTunesLayout = new javax.swing.GroupLayout(jPaneliTunes);
        jPaneliTunes.setLayout(jPaneliTunesLayout);
        jPaneliTunesLayout.setHorizontalGroup(
            jPaneliTunesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPaneliTunesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPaneliTunesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextCnID, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31))
                .addContainerGap(274, Short.MAX_VALUE))
        );
        jPaneliTunesLayout.setVerticalGroup(
            jPaneliTunesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPaneliTunesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextCnID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(241, Short.MAX_VALUE))
        );

        jTabPanelMain.addTab("    iTunes    ", jPaneliTunes);

        jPanelAdditional.setFont(jPanelAdditional.getFont());

        jTextEncodedBy.setFont(jTextEncodedBy.getFont());
        jTextEncodedBy.setDoubleBuffered(true);

        jLabel4.setFont(jLabel4.getFont().deriveFont(jLabel4.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel4.setLabelFor(jTextEncodedBy);
        jLabel4.setText("Encoded By");
        jLabel4.setDoubleBuffered(true);

        jComboMediaType.setFont(jComboMediaType.getFont());
        jComboMediaType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Music", "Movie", "Music Video", "TV Show" }));
        jComboMediaType.setDoubleBuffered(true);

        jLabel25.setFont(jLabel25.getFont().deriveFont(jLabel25.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel25.setLabelFor(jComboMediaType);
        jLabel25.setText("Media Type");
        jLabel25.setDoubleBuffered(true);

        jLabel26.setFont(jLabel26.getFont().deriveFont(jLabel26.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel26.setLabelFor(jComboCompilation);
        jLabel26.setText("Compilation");
        jLabel26.setDoubleBuffered(true);

        jTextCopyright.setFont(jTextCopyright.getFont());
        jTextCopyright.setDoubleBuffered(true);

        jLabel5.setFont(jLabel5.getFont().deriveFont(jLabel5.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel5.setLabelFor(jTextCopyright);
        jLabel5.setText("Copyright");
        jLabel5.setDoubleBuffered(true);

        jComboAdvisory.setFont(jComboAdvisory.getFont());
        jComboAdvisory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "N/A", "Clean Content", "Explicit Content" }));
        jComboAdvisory.setDoubleBuffered(true);

        jLabel27.setFont(jLabel27.getFont().deriveFont(jLabel27.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel27.setLabelFor(jComboAdvisory);
        jLabel27.setText("Lyrics Advisory");
        jLabel27.setDoubleBuffered(true);

        jLabel28.setFont(jLabel28.getFont().deriveFont(jLabel28.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel28.setLabelFor(jTextAreaComments);
        jLabel28.setText("Comments");
        jLabel28.setDoubleBuffered(true);

        jComboCompilation.setFont(jComboCompilation.getFont());
        jComboCompilation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Yes", "No" }));
        jComboCompilation.setSelectedIndex(1);
        jComboCompilation.setDoubleBuffered(true);

        jTextAreaComments.setColumns(20);
        jTextAreaComments.setFont(new java.awt.Font("Tahoma", 0, 11));
        jTextAreaComments.setLineWrap(true);
        jTextAreaComments.setRows(5);
        jTextAreaComments.setWrapStyleWord(true);
        jTextAreaComments.setDoubleBuffered(true);
        jScrollPane1.setViewportView(jTextAreaComments);

        jComboPodcast.setFont(jComboPodcast.getFont());
        jComboPodcast.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Yes", "No" }));
        jComboPodcast.setSelectedIndex(1);
        jComboPodcast.setDoubleBuffered(true);

        jLabel30.setFont(jLabel30.getFont().deriveFont(jLabel30.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel30.setLabelFor(jComboPodcast);
        jLabel30.setText("Podcast");
        jLabel30.setDoubleBuffered(true);

        javax.swing.GroupLayout jPanelAdditionalLayout = new javax.swing.GroupLayout(jPanelAdditional);
        jPanelAdditional.setLayout(jPanelAdditionalLayout);
        jPanelAdditionalLayout.setHorizontalGroup(
            jPanelAdditionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAdditionalLayout.createSequentialGroup()
                .addGroup(jPanelAdditionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAdditionalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE))
                    .addGroup(jPanelAdditionalLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE))
                    .addGroup(jPanelAdditionalLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jTextEncodedBy, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE))
                    .addGroup(jPanelAdditionalLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jTextCopyright, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE))
                    .addGroup(jPanelAdditionalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE))
                    .addGroup(jPanelAdditionalLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanelAdditionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                            .addComponent(jComboMediaType, javax.swing.GroupLayout.Alignment.LEADING, 0, 117, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelAdditionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                            .addComponent(jComboAdvisory, 0, 132, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelAdditionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                            .addComponent(jComboCompilation, javax.swing.GroupLayout.Alignment.TRAILING, 0, 89, Short.MAX_VALUE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanelAdditionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                            .addComponent(jComboPodcast, 0, 86, Short.MAX_VALUE)))
                    .addGroup(jPanelAdditionalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelAdditionalLayout.setVerticalGroup(
            jPanelAdditionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAdditionalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(6, 6, 6)
                .addComponent(jTextEncodedBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextCopyright, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanelAdditionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAdditionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel27)
                        .addComponent(jLabel30)
                        .addComponent(jLabel26))
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelAdditionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboMediaType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboPodcast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboCompilation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboAdvisory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabPanelMain.addTab("    Additional    ", jPanelAdditional);

        jButtonCancel.setFont(jButtonCancel.getFont());
        jButtonCancel.setMnemonic('C');
        jButtonCancel.setText("Close");
        jButtonCancel.setDoubleBuffered(true);
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jLabelUpdating.setText("Updating tags...");
        jLabelUpdating.setDoubleBuffered(true);

        jProgressBarUpdating.setDoubleBuffered(true);
        jProgressBarUpdating.setIndeterminate(true);

        jMenuBar1.setDoubleBuffered(true);

        jMenuFile.setMnemonic('F');
        jMenuFile.setText("File");
        jMenuFile.setDoubleBuffered(true);

        jMenuItemFileOpen.setMnemonic('O');
        jMenuItemFileOpen.setText("Open");
        jMenuItemFileOpen.setDoubleBuffered(true);
        jMenuItemFileOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFileOpenActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemFileOpen);

        jMenuItemFileClose.setMnemonic('C');
        jMenuItemFileClose.setText("Close");
        jMenuItemFileClose.setDoubleBuffered(true);
        jMenuItemFileClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFileCloseActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemFileClose);
        jMenuFile.add(jSeparator1);

        jMenuItemFileExit.setMnemonic('X');
        jMenuItemFileExit.setText("Exit");
        jMenuItemFileExit.setDoubleBuffered(true);
        jMenuItemFileExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFileExitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemFileExit);

        jMenuBar1.add(jMenuFile);

        jMenuHelp.setMnemonic('H');
        jMenuHelp.setText("Help");
        jMenuHelp.setDoubleBuffered(true);

        jMenuItemHelpAbout.setMnemonic('A');
        jMenuItemHelpAbout.setText("About");
        jMenuItemHelpAbout.setDoubleBuffered(true);
        jMenuItemHelpAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemHelpAboutActionPerformed(evt);
            }
        });
        jMenuHelp.add(jMenuItemHelpAbout);

        jMenuBar1.add(jMenuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabPanelMain, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jProgressBarUpdating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelUpdating)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                        .addComponent(jButtonOK)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonCancel))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelFile, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelFile)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabPanelMain, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonCancel)
                        .addComponent(jButtonOK))
                    .addComponent(jProgressBarUpdating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelUpdating))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemFileExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFileExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItemFileExitActionPerformed

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        if (this.Current != null) {
            this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            this.LockGUI(true);
            this.Updating(true);

            this.setCurrentFromGUI();

            TagUpdater t = new TagUpdater(this, this.Current);
            t.start();
        }
    }//GEN-LAST:event_jButtonOKActionPerformed

    private void jMenuItemFileOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFileOpenActionPerformed
        OpenFile();
    }//GEN-LAST:event_jMenuItemFileOpenActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        CloseFile();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jMenuItemHelpAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemHelpAboutActionPerformed
 
    }//GEN-LAST:event_jMenuItemHelpAboutActionPerformed

    private void jTextCnIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextCnIDKeyTyped
        ValidateNumeric(evt);
        ValidateLength(evt, jTextCnID.getText(), 20);
    }//GEN-LAST:event_jTextCnIDKeyTyped

    private void jTextSeriesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextSeriesKeyTyped
        ValidateNumeric(evt);
        ValidateLength(evt, jTextSeries.getText(), 3);
    }//GEN-LAST:event_jTextSeriesKeyTyped

    private void jTextEpisodeNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextEpisodeNumberKeyTyped
        ValidateNumeric(evt);
        ValidateLength(evt, jTextEpisodeNumber.getText(), 3);
    }//GEN-LAST:event_jTextEpisodeNumberKeyTyped

    private void jTextReleaseDateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextReleaseDateKeyTyped
        ValidateNumeric(evt);
        ValidateLength(evt, jTextReleaseDate.getText(), 4);
    }//GEN-LAST:event_jTextReleaseDateKeyTyped

    private void jTextTrackKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextTrackKeyTyped
        ValidateNumeric(evt);
        ValidateLength(evt, jTextTrack.getText(), 3);
    }//GEN-LAST:event_jTextTrackKeyTyped

    private void jTextTrackTotalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextTrackTotalKeyTyped
        ValidateNumeric(evt);
        ValidateLength(evt, jTextTrackTotal.getText(), 3);
    }//GEN-LAST:event_jTextTrackTotalKeyTyped

    private void jTextDiscKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextDiscKeyTyped
        ValidateNumeric(evt);
        ValidateLength(evt, jTextDisc.getText(), 3);
    }//GEN-LAST:event_jTextDiscKeyTyped

    private void jTextDiscTotalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextDiscTotalKeyTyped
        ValidateNumeric(evt);
        ValidateLength(evt, jTextDiscTotal.getText(), 3);
    }//GEN-LAST:event_jTextDiscTotalKeyTyped

    private void jTextBPMKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextBPMKeyTyped
        ValidateNumeric(evt);
        ValidateLength(evt, jTextBPM.getText(), 4);
    }//GEN-LAST:event_jTextBPMKeyTyped

    private void jMenuItemFileCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFileCloseActionPerformed
        CloseFile();
    }//GEN-LAST:event_jMenuItemFileCloseActionPerformed

    private void jTextComposerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextComposerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextComposerActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JComboBox jComboAdvisory;
    private javax.swing.JComboBox jComboCompilation;
    private javax.swing.JComboBox jComboGenre;
    private javax.swing.JComboBox jComboHD;
    private javax.swing.JComboBox jComboMediaType;
    private javax.swing.JComboBox jComboPodcast;
    private javax.swing.JComboBox jComboRating;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelFile;
    private javax.swing.JLabel jLabelUpdating;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JMenuItem jMenuItemFileClose;
    private javax.swing.JMenuItem jMenuItemFileExit;
    private javax.swing.JMenuItem jMenuItemFileOpen;
    private javax.swing.JMenuItem jMenuItemHelpAbout;
    private javax.swing.JPanel jPanelAdditional;
    private javax.swing.JPanel jPanelInfo;
    private javax.swing.JPanel jPanelVideo;
    private javax.swing.JPanel jPaneliTunes;
    private javax.swing.JProgressBar jProgressBarUpdating;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTabbedPane jTabPanelMain;
    private javax.swing.JTextField jTextAlbum;
    private javax.swing.JTextField jTextAlbumArtist;
    private javax.swing.JTextArea jTextAreaComments;
    private javax.swing.JTextArea jTextAreaDescription;
    private javax.swing.JTextField jTextArtist;
    private javax.swing.JTextField jTextBPM;
    private javax.swing.JTextField jTextCnID;
    private javax.swing.JTextField jTextComposer;
    private javax.swing.JTextField jTextCopyright;
    private javax.swing.JTextField jTextDisc;
    private javax.swing.JTextField jTextDiscTotal;
    private javax.swing.JTextField jTextEncodedBy;
    private javax.swing.JTextField jTextEpisodeID;
    private javax.swing.JTextField jTextEpisodeNumber;
    private javax.swing.JTextField jTextGrouping;
    private javax.swing.JTextField jTextName;
    private javax.swing.JTextField jTextProgramme;
    private javax.swing.JTextField jTextReleaseDate;
    private javax.swing.JTextField jTextSeries;
    private javax.swing.JTextField jTextTrack;
    private javax.swing.JTextField jTextTrackTotal;
    // End of variables declaration//GEN-END:variables

    private void setCurrentFromGUI() {
        this.Current.setName(this.jTextName.getText());
        this.Current.setArtist(this.jTextArtist.getText());
        this.Current.setAlbumArtist(this.jTextAlbumArtist.getText());
        this.Current.setAlbum(this.jTextAlbum.getText());
        this.Current.setGrouping(this.jTextGrouping.getText());
        this.Current.setCopyright(this.jTextCopyright.getText());
        this.Current.setComposer(this.jTextComposer.getText());
        this.Current.setComments(this.jTextAreaComments.getText());
        this.Current.setEncodedBy(this.jTextEncodedBy.getText());
        this.Current.setDescription(this.jTextAreaDescription.getText());
        this.Current.setTvShowName(this.jTextProgramme.getText());
        this.Current.setTvEpisode(this.jTextEpisodeID.getText());
        this.Current.setRating(this.jComboRating.getSelectedIndex());
        this.Current.setMediaType(this.jComboMediaType.getSelectedIndex());
        this.Current.setAdvisory(this.jComboAdvisory.getSelectedIndex());

        if (this.jComboHD.getSelectedIndex() == 0) {
            this.Current.setIsHD(true);
        } else {
            this.Current.setIsHD(false);
        }
        if (this.jComboCompilation.getSelectedIndex() == 0) {
            this.Current.setIsCompilation(true);
        } else {
            this.Current.setIsCompilation(false);
        }
        if (this.jComboPodcast.getSelectedIndex() == 0) {
            this.Current.setIsPodcast(true);
        } else {
            this.Current.setIsPodcast(false);
        }
        if (this.jComboGenre.getSelectedItem() != null) {
            this.Current.setGenre(this.jComboGenre.getSelectedItem().toString());
        } else {
            this.Current.setGenre("");
        }
        try {
            this.Current.setReleaseDate(Integer.parseInt(this.jTextReleaseDate.getText()));
        } catch (NumberFormatException e) {
            this.Current.setReleaseDate(0);
        }
        try {
            this.Current.setTvEpisodeNum(Integer.parseInt(this.jTextEpisodeNumber.getText()));
        } catch (NumberFormatException e) {
            this.Current.setTvEpisodeNum(0);
        }
        try {
            this.Current.setTvSeasonNum(Integer.parseInt(this.jTextSeries.getText()));
        } catch (NumberFormatException e) {
            this.Current.setTvSeasonNum(0);
        }
        try {
            this.Current.setTrack(Integer.parseInt(this.jTextTrack.getText()));
        } catch (NumberFormatException e) {
            this.Current.setTrack(0);
        }
        try {
            this.Current.setTrackTotal(Integer.parseInt(this.jTextTrackTotal.getText()));
        } catch (NumberFormatException e) {
            this.Current.setTrackTotal(0);
        }
        try {
            this.Current.setDisc(Integer.parseInt(this.jTextDisc.getText()));
        } catch (NumberFormatException e) {
            this.Current.setDisc(0);
        }
        try {
            this.Current.setDiscTotal(Integer.parseInt(this.jTextDiscTotal.getText()));
        } catch (NumberFormatException e) {
            this.Current.setDiscTotal(0);
        }
        try {
            this.Current.setBPM(Integer.parseInt(this.jTextBPM.getText()));
        } catch (NumberFormatException e) {
            this.Current.setBPM(0);
        }
        try {
            this.Current.setCnID(Integer.parseInt(this.jTextCnID.getText()));
        } catch (NumberFormatException e) {
            this.Current.setCnID(0);
        }
    }

    protected void setGuiFromCurrent() {
        if (this.Current.getFilename() == null || this.Current.getFilename().length() == 0) {
            this.jLabelFile.setText("none");
        } else {
            this.jLabelFile.setText(this.Current.getFilename());
        }

        this.jTextEncodedBy.setText(this.Current.getEncodedBy());
        this.jTextArtist.setText(this.Current.getArtist());
        this.jTextAlbumArtist.setText(this.Current.getAlbumArtist());
        this.jTextAlbum.setText(this.Current.getAlbum());
        this.jTextName.setText(this.Current.getName());
        this.jTextGrouping.setText(this.Current.getGrouping());
        this.jTextComposer.setText(this.Current.getComposer());
        this.jTextCopyright.setText(this.Current.getCopyright());
        this.jTextAreaComments.setText(this.Current.getComments());
        this.jComboGenre.setSelectedItem(this.Current.getGenre());
        this.jComboRating.setSelectedIndex(this.Current.getRating());
        this.jComboAdvisory.setSelectedIndex(this.Current.getAdvisory());
        this.jComboMediaType.setSelectedIndex(this.Current.getMediaType());
        this.jTextProgramme.setText(this.Current.getTvShowName());
        this.jTextEpisodeID.setText(this.Current.getTvEpisode());
        this.jTextAreaDescription.setText(this.Current.getDescription());

        if (this.Current.getTvEpisodeNum() > 0) {
            this.jTextEpisodeNumber.setText(Integer.toString(this.Current.getTvEpisodeNum()));
        } else {
            this.jTextEpisodeNumber.setText("");
        }
        if (this.Current.getTvSeasonNum() > 0) {
            this.jTextSeries.setText(Integer.toString(this.Current.getTvSeasonNum()));
        } else {
            this.jTextSeries.setText("");
        }
        if (this.Current.getIsHD()) {
            this.jComboHD.setSelectedIndex(0);
        } else {
            this.jComboHD.setSelectedIndex(1);
        }
        if (this.Current.getIsPodcast()) {
            this.jComboPodcast.setSelectedIndex(0);
        } else {
            this.jComboPodcast.setSelectedIndex(1);
        }
        if (this.Current.getIsCompilation()) {
            this.jComboCompilation.setSelectedIndex(0);
        } else {
            this.jComboCompilation.setSelectedIndex(1);
        }
        if (this.Current.getReleaseDate() > 0) {
            this.jTextReleaseDate.setText(Integer.toString(this.Current.getReleaseDate()));
        } else {
            this.jTextReleaseDate.setText("");
        }
        if (this.Current.getTrack() > 0) {
            this.jTextTrack.setText(Integer.toString(this.Current.getTrack()));
        } else {
            this.jTextTrack.setText("");
        }
        if (this.Current.getTrackTotal() > 0) {
            this.jTextTrackTotal.setText(Integer.toString(this.Current.getTrackTotal()));
        } else {
            this.jTextTrackTotal.setText("");
        }
        if (this.Current.getDisc() > 0) {
            this.jTextDisc.setText(Integer.toString(this.Current.getDisc()));
        } else {
            this.jTextDisc.setText("");
        }
        if (this.Current.getDiscTotal() > 0) {
            this.jTextDiscTotal.setText(Integer.toString(this.Current.getDiscTotal()));
        } else {
            this.jTextDiscTotal.setText("");
        }
        if (this.Current.getBPM() > 0) {
            this.jTextBPM.setText(Integer.toString(this.Current.getBPM()));
        } else {
            this.jTextBPM.setText("");
        }
        if (this.Current.getCnID() > 0) {
            this.jTextCnID.setText(Integer.toString(this.Current.getCnID()));
        } else {
            this.jTextCnID.setText("");
        }
    }

    private void OpenFile() {
        if (jFileChooser1.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            this.LockGUI(true);

            this.Current = new Tag(jFileChooser1.getSelectedFile().getAbsolutePath());

            this.Current = TagReader.read(this.Current.getFilename());

            this.setGuiFromCurrent();

            this.LockGUI(false);

            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
    }

    protected void Updating(boolean updating) {
        this.jLabelUpdating.setVisible(updating);
        this.jProgressBarUpdating.setVisible(updating);
        this.jMenuFile.setEnabled(!updating);
        this.jMenuHelp.setEnabled(!updating);
    }

    protected void LockGUI(boolean Loaded) {
        for (Component c : this.jPanelInfo.getComponents()) {
            c.setEnabled(!Loaded);
        }

        for (Component c : this.jPanelAdditional.getComponents()) {
            c.setEnabled(!Loaded);
        }

        for (Component c : this.jPanelVideo.getComponents()) {
            c.setEnabled(!Loaded);
        }

        for (Component c : this.jPaneliTunes.getComponents()) {
            c.setEnabled(!Loaded);
        }

        this.jTextAreaComments.setEnabled(!Loaded);
        this.jTextAreaDescription.setEnabled(!Loaded);
        this.jLabelFile.setEnabled(!Loaded);
        this.jLabel1.setEnabled(!Loaded);
        this.jButtonCancel.setEnabled(!Loaded);
        this.jButtonOK.setEnabled(!Loaded);
        this.jMenuItemFileClose.setEnabled(!Loaded);
    }

    private void LoadCombos() {
        this.jComboGenre.addItem("Alternative");
        this.jComboGenre.addItem("Books & Spoken");
        this.jComboGenre.addItem("Blues/R&B");
        this.jComboGenre.addItem("Children’s Music");
        this.jComboGenre.addItem("Classical");
        this.jComboGenre.addItem("Country");
        this.jComboGenre.addItem("Dance");
        this.jComboGenre.addItem("Easy Listening");
        this.jComboGenre.addItem("Electronic");
        this.jComboGenre.addItem("Folk");
        this.jComboGenre.addItem("House");
        this.jComboGenre.addItem("Industrial");
        this.jComboGenre.addItem("Techno");
        this.jComboGenre.addItem("Trance");
        this.jComboGenre.addItem("Hip-Hop/Rap");
        this.jComboGenre.addItem("Holiday");
        this.jComboGenre.addItem("Jazz");
        this.jComboGenre.addItem("New Age");
        this.jComboGenre.addItem("Pop");
        this.jComboGenre.addItem("Religious");
        this.jComboGenre.addItem("Rock");
        this.jComboGenre.addItem("Soundtrack");
        this.jComboGenre.addItem("Unclassifiable");
        this.jComboGenre.addItem("World");
    }

    private void ValidateNumeric(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
            evt.consume();
        }
    }

    private void ValidateLength(java.awt.event.KeyEvent evt, String text, int length) {
        if (text.length() >= length) {
            char c = evt.getKeyChar();
            if (c != KeyEvent.VK_BACK_SPACE && c != KeyEvent.VK_DELETE) {
                evt.consume();
            }
        }
    }

    private void CloseFile() {
        this.Current = new Tag("");
        this.setGuiFromCurrent();
        this.LockGUI(true);
    }
}
